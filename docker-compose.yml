version: '3.8'

services:
  # MySQL
  db:
    container_name: db
    image: mysql/mysql-server:8.0.23
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}"]
      interval: 5s
      timeout: 30s
      retries: 10
    # volumes:
    #   - db_data:/var/lib/mysql

  # Elasticsearch
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment: ['CLI_JAVA_OPTS=-Xms2g -Xmx2g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:    
      resources:
          limits:
            cpus: '2.0'
          reservations:
            cpus: '1.0'
    healthcheck:
      test: ["CMD-SHELL","sleep 30 && curl -f elasticsearch:9200/_cluster/health?wait_for_status=green&timeout=1s || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 10

  # Redis
  redis:
    container_name: redis
    image: redis:7.2.3
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 10

  # Sidekiq
  sidekiq:
    container_name: sidekiq
    build:
      context: .
      dockerfile: Dockerfile
    command: bundle exec sidekiq
    depends_on:
      db: 
        condition: service_healthy
      redis: 
        condition: service_healthy
    environment:
      RAILS_ENV: ${RAILS_ENV}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_URL: "redis://redis:6379/0"
    volumes:
      - .:/rails
    stdin_open: true
    tty: true

  # Rails Application
  web:
    container_name: web
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db: 
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis: 
        condition: service_healthy
    environment:
      RAILS_ENV: ${RAILS_ENV}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      REDIS_URL: "redis://redis:6379/0"
    ports:
      - "3000:3000"
    command: bash -c "bundle exec rails db:create db:migrate --trace && bundle exec rails server -p 3000 -b '0.0.0.0'"
    stdin_open: true
    tty: true

# volumes:
#   db_data: